import "../styles/globals.css";
import {
  Box,
  Button,
  ChakraProvider,
  Container,
  Heading,
  Icon,
  Modal,
  ModalContent,
  ModalOverlay,
  VStack,
} from "@chakra-ui/react";
import Head from "next/head";
import NTButton from "../components/buttons/NTButton";
import Link from "next/link";
import GithubButton from "../components/buttons/GithubButton";
import { HamburgerIcon } from "@chakra-ui/icons";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";

function MyApp({ Component, pageProps }) {
  const router = useRouter();

  // log the pageview with their URL
  export const pageview = (url) => {
    window.gtag("config", process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS, {
      page_path: url,
    });
  };

  useEffect(() => {
    const handleRouteChange = (url) => {
      setNavModal(false);
    };

    const handlePageView = (url) => {
      ga.pageview(url);
    };

    router.events.on("routeChangeComplete", handlePageView);
    router.events.on("routeChangeStart", handleRouteChange);

    return () => {
      router.events.off("routeChangeStart", handleRouteChange);
      router.events.off("routeChangeComplete", handlePageView);
    };
  }, []);

  const NavLinks = () => {
    return (
      <>
        <Link href={"/"} passHref>
          <a>
            <NTButton>Home</NTButton>
          </a>
        </Link>
        <Link href={"/blog"} passHref>
          <a>
            <NTButton>Blog</NTButton>
          </a>
        </Link>
        <Link href={"/resume.pdf"} passHref>
          <a target={"_blank"}>
            <NTButton>Resume</NTButton>
          </a>
        </Link>
        {/*<Link href={"/contact"} passHref>*/}
        {/*  <a>*/}
        {/*    <NTButton>Contact</NTButton>*/}
        {/*  </a>*/}
        {/*</Link>*/}
      </>
    );
  };

  const [NavModal, setNavModal] = useState(false);

  return (
    <ChakraProvider>
      <Head>
        <title>Nic Toporcov</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <script
          async
          src={`https://www.googletagmanager.com/gtag/js?id=${process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS}`}
        ></script>
        <script
          dangerouslySetInnerHTML={{
            __html: `
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', '${process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS}', {
              page_path: window.location.pathname,
            });
          `,
          }}
        />
      </Head>

      <Box
        as={"nav"}
        display={"flex"}
        flexWrap={"nowrap"}
        justifyContent={"space-between"}
        alignItems={"center"}
        padding={5}
        position={"sticky"}
        top={0}
        zIndex={100}
        backdropFilter={"blur(10px)saturate(130%)"}
        bgColor={"rgba(255,255,255,0.76)"}
        borderBottom={"solid 1px #e8e8e8"}
      >
        <Link href={"/"} passHref>
          <a>
            <Heading>Nic Toporcov</Heading>
          </a>
        </Link>
        <Box display={{ base: "none", md: "unset" }}>
          <NavLinks />
        </Box>
        <Button
          display={{ base: "unset", md: "none" }}
          variant={"ghost"}
          onClick={() => setNavModal(true)}
        >
          <Icon h={8} w={8} as={HamburgerIcon} />
        </Button>
      </Box>

      <Container as={"main"} maxW={"4xl"} centerContent pb={"30vh"}>
        <Component {...pageProps} />
      </Container>

      <Modal isOpen={NavModal} onClose={() => setNavModal(false)}>
        <ModalOverlay
          backdropFilter={"blur(10px)saturate(130%)"}
          bgColor={"rgba(210,210,210,0.76)"}
        />
        <ModalContent bg={"none"} shadow={"none"}>
          <VStack spacing={10} padding={10}>
            <NavLinks />
            <Button
              variant={"outline"}
              width={"80%"}
              position={"fixed"}
              bottom={10}
              onClick={() => setNavModal(false)}
              borderColor={"black"}
            >
              Close
            </Button>
          </VStack>
        </ModalContent>
      </Modal>

      <GithubButton />
    </ChakraProvider>
  );
}

export default MyApp;
